// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: cardListMenu.proto

// package should be matched to the directory which .pb.go file will be placed

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Request
type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterType  string `protobuf:"bytes,1,opt,name=filterType,proto3" json:"filterType,omitempty"`
	FilterValue string `protobuf:"bytes,2,opt,name=filterValue,proto3" json:"filterValue,omitempty"`
	Page        string `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit       string `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardListMenu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_cardListMenu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_cardListMenu_proto_rawDescGZIP(), []int{0}
}

func (x *Page) GetFilterType() string {
	if x != nil {
		return x.FilterType
	}
	return ""
}

func (x *Page) GetFilterValue() string {
	if x != nil {
		return x.FilterValue
	}
	return ""
}

func (x *Page) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *Page) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

type BlockPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *Page  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Branch   string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	OcBranch string `protobuf:"bytes,3,opt,name=ocBranch,proto3" json:"ocBranch,omitempty"`
}

func (x *BlockPage) Reset() {
	*x = BlockPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardListMenu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPage) ProtoMessage() {}

func (x *BlockPage) ProtoReflect() protoreflect.Message {
	mi := &file_cardListMenu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPage.ProtoReflect.Descriptor instead.
func (*BlockPage) Descriptor() ([]byte, []int) {
	return file_cardListMenu_proto_rawDescGZIP(), []int{1}
}

func (x *BlockPage) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *BlockPage) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *BlockPage) GetOcBranch() string {
	if x != nil {
		return x.OcBranch
	}
	return ""
}

type VCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardNo       string                 `protobuf:"bytes,1,opt,name=cardNo,proto3" json:"cardNo,omitempty"`
	CardType     string                 `protobuf:"bytes,2,opt,name=cardType,proto3" json:"cardType,omitempty"`
	NameOnCard   string                 `protobuf:"bytes,3,opt,name=nameOnCard,proto3" json:"nameOnCard,omitempty"`
	CifName      string                 `protobuf:"bytes,4,opt,name=cifName,proto3" json:"cifName,omitempty"`
	Cif          string                 `protobuf:"bytes,5,opt,name=cif,proto3" json:"cif,omitempty"`
	CardBranch   string                 `protobuf:"bytes,6,opt,name=cardBranch,proto3" json:"cardBranch,omitempty"`
	Status       string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	InstantNon   string                 `protobuf:"bytes,8,opt,name=instantNon,proto3" json:"instantNon,omitempty"`
	BranchName   string                 `protobuf:"bytes,9,opt,name=branchName,proto3" json:"branchName,omitempty"`
	CardTypeDesc string                 `protobuf:"bytes,10,opt,name=cardTypeDesc,proto3" json:"cardTypeDesc,omitempty"`
	AccFlag      string                 `protobuf:"bytes,11,opt,name=accFlag,proto3" json:"accFlag,omitempty"`
	BirthDate    *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	BirthPlace   string                 `protobuf:"bytes,13,opt,name=birthPlace,proto3" json:"birthPlace,omitempty"`
	MotherName   string                 `protobuf:"bytes,14,opt,name=motherName,proto3" json:"motherName,omitempty"`
	PhoneNum     string                 `protobuf:"bytes,15,opt,name=phoneNum,proto3" json:"phoneNum,omitempty"`
	Address      string                 `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	CreateDate   *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createDate,proto3" json:"createDate,omitempty"`
	LastUpdate   *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	ExpireOnCMS  *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=expireOnCMS,proto3" json:"expireOnCMS,omitempty"`
	ExpireOnCard *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=expireOnCard,proto3" json:"expireOnCard,omitempty"`
	ExpirePin    *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=expirePin,proto3" json:"expirePin,omitempty"`
}

func (x *VCard) Reset() {
	*x = VCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardListMenu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCard) ProtoMessage() {}

func (x *VCard) ProtoReflect() protoreflect.Message {
	mi := &file_cardListMenu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCard.ProtoReflect.Descriptor instead.
func (*VCard) Descriptor() ([]byte, []int) {
	return file_cardListMenu_proto_rawDescGZIP(), []int{2}
}

func (x *VCard) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

func (x *VCard) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *VCard) GetNameOnCard() string {
	if x != nil {
		return x.NameOnCard
	}
	return ""
}

func (x *VCard) GetCifName() string {
	if x != nil {
		return x.CifName
	}
	return ""
}

func (x *VCard) GetCif() string {
	if x != nil {
		return x.Cif
	}
	return ""
}

func (x *VCard) GetCardBranch() string {
	if x != nil {
		return x.CardBranch
	}
	return ""
}

func (x *VCard) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VCard) GetInstantNon() string {
	if x != nil {
		return x.InstantNon
	}
	return ""
}

func (x *VCard) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *VCard) GetCardTypeDesc() string {
	if x != nil {
		return x.CardTypeDesc
	}
	return ""
}

func (x *VCard) GetAccFlag() string {
	if x != nil {
		return x.AccFlag
	}
	return ""
}

func (x *VCard) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *VCard) GetBirthPlace() string {
	if x != nil {
		return x.BirthPlace
	}
	return ""
}

func (x *VCard) GetMotherName() string {
	if x != nil {
		return x.MotherName
	}
	return ""
}

func (x *VCard) GetPhoneNum() string {
	if x != nil {
		return x.PhoneNum
	}
	return ""
}

func (x *VCard) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *VCard) GetCreateDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateDate
	}
	return nil
}

func (x *VCard) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

func (x *VCard) GetExpireOnCMS() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireOnCMS
	}
	return nil
}

func (x *VCard) GetExpireOnCard() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireOnCard
	}
	return nil
}

func (x *VCard) GetExpirePin() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirePin
	}
	return nil
}

// Response
type VCardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vcard []*VCard `protobuf:"bytes,1,rep,name=vcard,proto3" json:"vcard,omitempty"`
}

func (x *VCardList) Reset() {
	*x = VCardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardListMenu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCardList) ProtoMessage() {}

func (x *VCardList) ProtoReflect() protoreflect.Message {
	mi := &file_cardListMenu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCardList.ProtoReflect.Descriptor instead.
func (*VCardList) Descriptor() ([]byte, []int) {
	return file_cardListMenu_proto_rawDescGZIP(), []int{3}
}

func (x *VCardList) GetVcard() []*VCard {
	if x != nil {
		return x.Vcard
	}
	return nil
}

var File_cardListMenu_proto protoreflect.FileDescriptor

var file_cardListMenu_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a,
	0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x63, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x63, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x9d, 0x06, 0x0a,
	0x05, 0x56, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x69,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x69, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x38, 0x0a, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x6e,
	0x43, 0x4d, 0x53, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x6e, 0x43,
	0x4d, 0x53, 0x12, 0x3e, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x6e, 0x43, 0x61,
	0x72, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x4f, 0x6e, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x69, 0x6e, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x50, 0x69, 0x6e, 0x22, 0x2c, 0x0a, 0x09,
	0x56, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x76, 0x63, 0x61, 0x72, 0x64, 0x32, 0x98, 0x01, 0x0a, 0x08, 0x43,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x00, 0x12, 0x34, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x56,
	0x43, 0x61, 0x72, 0x64, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cardListMenu_proto_rawDescOnce sync.Once
	file_cardListMenu_proto_rawDescData = file_cardListMenu_proto_rawDesc
)

func file_cardListMenu_proto_rawDescGZIP() []byte {
	file_cardListMenu_proto_rawDescOnce.Do(func() {
		file_cardListMenu_proto_rawDescData = protoimpl.X.CompressGZIP(file_cardListMenu_proto_rawDescData)
	})
	return file_cardListMenu_proto_rawDescData
}

var file_cardListMenu_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cardListMenu_proto_goTypes = []interface{}{
	(*Page)(nil),                  // 0: pb.Page
	(*BlockPage)(nil),             // 1: pb.BlockPage
	(*VCard)(nil),                 // 2: pb.VCard
	(*VCardList)(nil),             // 3: pb.VCardList
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_cardListMenu_proto_depIdxs = []int32{
	0,  // 0: pb.BlockPage.page:type_name -> pb.Page
	4,  // 1: pb.VCard.birthDate:type_name -> google.protobuf.Timestamp
	4,  // 2: pb.VCard.createDate:type_name -> google.protobuf.Timestamp
	4,  // 3: pb.VCard.lastUpdate:type_name -> google.protobuf.Timestamp
	4,  // 4: pb.VCard.expireOnCMS:type_name -> google.protobuf.Timestamp
	4,  // 5: pb.VCard.expireOnCard:type_name -> google.protobuf.Timestamp
	4,  // 6: pb.VCard.expirePin:type_name -> google.protobuf.Timestamp
	2,  // 7: pb.VCardList.vcard:type_name -> pb.VCard
	0,  // 8: pb.CardList.GetCardList:input_type -> pb.Page
	1,  // 9: pb.CardList.GetCardBlockedList:input_type -> pb.BlockPage
	2,  // 10: pb.CardList.GetCardDetails:input_type -> pb.VCard
	3,  // 11: pb.CardList.GetCardList:output_type -> pb.VCardList
	3,  // 12: pb.CardList.GetCardBlockedList:output_type -> pb.VCardList
	3,  // 13: pb.CardList.GetCardDetails:output_type -> pb.VCardList
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_cardListMenu_proto_init() }
func file_cardListMenu_proto_init() {
	if File_cardListMenu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cardListMenu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cardListMenu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cardListMenu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cardListMenu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cardListMenu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cardListMenu_proto_goTypes,
		DependencyIndexes: file_cardListMenu_proto_depIdxs,
		MessageInfos:      file_cardListMenu_proto_msgTypes,
	}.Build()
	File_cardListMenu_proto = out.File
	file_cardListMenu_proto_rawDesc = nil
	file_cardListMenu_proto_goTypes = nil
	file_cardListMenu_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CardListClient is the client API for CardList service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardListClient interface {
	GetCardList(ctx context.Context, in *Page, opts ...grpc.CallOption) (*VCardList, error)
	GetCardBlockedList(ctx context.Context, in *BlockPage, opts ...grpc.CallOption) (*VCardList, error)
	GetCardDetails(ctx context.Context, in *VCard, opts ...grpc.CallOption) (*VCardList, error)
}

type cardListClient struct {
	cc grpc.ClientConnInterface
}

func NewCardListClient(cc grpc.ClientConnInterface) CardListClient {
	return &cardListClient{cc}
}

func (c *cardListClient) GetCardList(ctx context.Context, in *Page, opts ...grpc.CallOption) (*VCardList, error) {
	out := new(VCardList)
	err := c.cc.Invoke(ctx, "/pb.CardList/GetCardList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardListClient) GetCardBlockedList(ctx context.Context, in *BlockPage, opts ...grpc.CallOption) (*VCardList, error) {
	out := new(VCardList)
	err := c.cc.Invoke(ctx, "/pb.CardList/GetCardBlockedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardListClient) GetCardDetails(ctx context.Context, in *VCard, opts ...grpc.CallOption) (*VCardList, error) {
	out := new(VCardList)
	err := c.cc.Invoke(ctx, "/pb.CardList/GetCardDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardListServer is the server API for CardList service.
type CardListServer interface {
	GetCardList(context.Context, *Page) (*VCardList, error)
	GetCardBlockedList(context.Context, *BlockPage) (*VCardList, error)
	GetCardDetails(context.Context, *VCard) (*VCardList, error)
}

// UnimplementedCardListServer can be embedded to have forward compatible implementations.
type UnimplementedCardListServer struct {
}

func (*UnimplementedCardListServer) GetCardList(context.Context, *Page) (*VCardList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardList not implemented")
}
func (*UnimplementedCardListServer) GetCardBlockedList(context.Context, *BlockPage) (*VCardList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardBlockedList not implemented")
}
func (*UnimplementedCardListServer) GetCardDetails(context.Context, *VCard) (*VCardList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCardDetails not implemented")
}

func RegisterCardListServer(s *grpc.Server, srv CardListServer) {
	s.RegisterService(&_CardList_serviceDesc, srv)
}

func _CardList_GetCardList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Page)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardListServer).GetCardList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CardList/GetCardList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardListServer).GetCardList(ctx, req.(*Page))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardList_GetCardBlockedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockPage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardListServer).GetCardBlockedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CardList/GetCardBlockedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardListServer).GetCardBlockedList(ctx, req.(*BlockPage))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardList_GetCardDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardListServer).GetCardDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CardList/GetCardDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardListServer).GetCardDetails(ctx, req.(*VCard))
	}
	return interceptor(ctx, in, info, handler)
}

var _CardList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CardList",
	HandlerType: (*CardListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCardList",
			Handler:    _CardList_GetCardList_Handler,
		},
		{
			MethodName: "GetCardBlockedList",
			Handler:    _CardList_GetCardBlockedList_Handler,
		},
		{
			MethodName: "GetCardDetails",
			Handler:    _CardList_GetCardDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cardListMenu.proto",
}
