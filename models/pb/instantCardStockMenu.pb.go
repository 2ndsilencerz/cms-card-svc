// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: instantCardStockMenu.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VCardType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeCode        string `protobuf:"bytes,1,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	Description     string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	MainType        string `protobuf:"bytes,3,opt,name=mainType,proto3" json:"mainType,omitempty"`
	MagneticCardSum int32  `protobuf:"varint,4,opt,name=magneticCardSum,proto3" json:"magneticCardSum,omitempty"`
	ChipCardSum     int32  `protobuf:"varint,5,opt,name=chipCardSum,proto3" json:"chipCardSum,omitempty"`
	AllCardSum      int32  `protobuf:"varint,6,opt,name=allCardSum,proto3" json:"allCardSum,omitempty"`
}

func (x *VCardType) Reset() {
	*x = VCardType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instantCardStockMenu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCardType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCardType) ProtoMessage() {}

func (x *VCardType) ProtoReflect() protoreflect.Message {
	mi := &file_instantCardStockMenu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCardType.ProtoReflect.Descriptor instead.
func (*VCardType) Descriptor() ([]byte, []int) {
	return file_instantCardStockMenu_proto_rawDescGZIP(), []int{0}
}

func (x *VCardType) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *VCardType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VCardType) GetMainType() string {
	if x != nil {
		return x.MainType
	}
	return ""
}

func (x *VCardType) GetMagneticCardSum() int32 {
	if x != nil {
		return x.MagneticCardSum
	}
	return 0
}

func (x *VCardType) GetChipCardSum() int32 {
	if x != nil {
		return x.ChipCardSum
	}
	return 0
}

func (x *VCardType) GetAllCardSum() int32 {
	if x != nil {
		return x.AllCardSum
	}
	return 0
}

type VCardTypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VCardType []*VCardType `protobuf:"bytes,1,rep,name=VCardType,proto3" json:"VCardType,omitempty"`
}

func (x *VCardTypeList) Reset() {
	*x = VCardTypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instantCardStockMenu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCardTypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCardTypeList) ProtoMessage() {}

func (x *VCardTypeList) ProtoReflect() protoreflect.Message {
	mi := &file_instantCardStockMenu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCardTypeList.ProtoReflect.Descriptor instead.
func (*VCardTypeList) Descriptor() ([]byte, []int) {
	return file_instantCardStockMenu_proto_rawDescGZIP(), []int{1}
}

func (x *VCardTypeList) GetVCardType() []*VCardType {
	if x != nil {
		return x.VCardType
	}
	return nil
}

type EmbossRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Page      *Page                  `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *EmbossRequest) Reset() {
	*x = EmbossRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instantCardStockMenu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbossRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbossRequest) ProtoMessage() {}

func (x *EmbossRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instantCardStockMenu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbossRequest.ProtoReflect.Descriptor instead.
func (*EmbossRequest) Descriptor() ([]byte, []int) {
	return file_instantCardStockMenu_proto_rawDescGZIP(), []int{2}
}

func (x *EmbossRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EmbossRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *EmbossRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *EmbossRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type InstantCardStockSum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VCardType []*VCardType `protobuf:"bytes,1,rep,name=VCardType,proto3" json:"VCardType,omitempty"`
}

func (x *InstantCardStockSum) Reset() {
	*x = InstantCardStockSum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instantCardStockMenu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantCardStockSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantCardStockSum) ProtoMessage() {}

func (x *InstantCardStockSum) ProtoReflect() protoreflect.Message {
	mi := &file_instantCardStockMenu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantCardStockSum.ProtoReflect.Descriptor instead.
func (*InstantCardStockSum) Descriptor() ([]byte, []int) {
	return file_instantCardStockMenu_proto_rawDescGZIP(), []int{3}
}

func (x *InstantCardStockSum) GetVCardType() []*VCardType {
	if x != nil {
		return x.VCardType
	}
	return nil
}

type InstantStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EmbossDate   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=embossDate,proto3" json:"embossDate,omitempty"`
	EndNumber    string                 `protobuf:"bytes,3,opt,name=endNumber,proto3" json:"endNumber,omitempty"`
	GenerateDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=generateDate,proto3" json:"generateDate,omitempty"`
	Print        int32                  `protobuf:"varint,5,opt,name=print,proto3" json:"print,omitempty"`
	ServiceCode  int32                  `protobuf:"varint,6,opt,name=serviceCode,proto3" json:"serviceCode,omitempty"`
	StartNumber  string                 `protobuf:"bytes,7,opt,name=startNumber,proto3" json:"startNumber,omitempty"`
	Status       string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Total        int32                  `protobuf:"varint,9,opt,name=total,proto3" json:"total,omitempty"`
	Type         string                 `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	UserEmboss   string                 `protobuf:"bytes,11,opt,name=userEmboss,proto3" json:"userEmboss,omitempty"`
	UserGenerate string                 `protobuf:"bytes,12,opt,name=userGenerate,proto3" json:"userGenerate,omitempty"`
}

func (x *InstantStock) Reset() {
	*x = InstantStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instantCardStockMenu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantStock) ProtoMessage() {}

func (x *InstantStock) ProtoReflect() protoreflect.Message {
	mi := &file_instantCardStockMenu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantStock.ProtoReflect.Descriptor instead.
func (*InstantStock) Descriptor() ([]byte, []int) {
	return file_instantCardStockMenu_proto_rawDescGZIP(), []int{4}
}

func (x *InstantStock) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstantStock) GetEmbossDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EmbossDate
	}
	return nil
}

func (x *InstantStock) GetEndNumber() string {
	if x != nil {
		return x.EndNumber
	}
	return ""
}

func (x *InstantStock) GetGenerateDate() *timestamppb.Timestamp {
	if x != nil {
		return x.GenerateDate
	}
	return nil
}

func (x *InstantStock) GetPrint() int32 {
	if x != nil {
		return x.Print
	}
	return 0
}

func (x *InstantStock) GetServiceCode() int32 {
	if x != nil {
		return x.ServiceCode
	}
	return 0
}

func (x *InstantStock) GetStartNumber() string {
	if x != nil {
		return x.StartNumber
	}
	return ""
}

func (x *InstantStock) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InstantStock) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *InstantStock) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InstantStock) GetUserEmboss() string {
	if x != nil {
		return x.UserEmboss
	}
	return ""
}

func (x *InstantStock) GetUserGenerate() string {
	if x != nil {
		return x.UserGenerate
	}
	return ""
}

type InstantStockList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstantStock []*InstantStock `protobuf:"bytes,1,rep,name=InstantStock,proto3" json:"InstantStock,omitempty"`
	TotalPage    int32           `protobuf:"varint,2,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
}

func (x *InstantStockList) Reset() {
	*x = InstantStockList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instantCardStockMenu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantStockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantStockList) ProtoMessage() {}

func (x *InstantStockList) ProtoReflect() protoreflect.Message {
	mi := &file_instantCardStockMenu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantStockList.ProtoReflect.Descriptor instead.
func (*InstantStockList) Descriptor() ([]byte, []int) {
	return file_instantCardStockMenu_proto_rawDescGZIP(), []int{5}
}

func (x *InstantStockList) GetInstantStock() []*InstantStock {
	if x != nil {
		return x.InstantStock
	}
	return nil
}

func (x *InstantStockList) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

var File_instantCardStockMenu_proto protoreflect.FileDescriptor

var file_instantCardStockMenu_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x4d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x63, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd1, 0x01, 0x0a, 0x09, 0x56, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61,
	0x67, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x69, 0x70, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x70, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x53, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x75, 0x6d, 0x22, 0x3c, 0x0a, 0x0d, 0x56, 0x43, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x56, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x56, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x62, 0x6f, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x12,
	0x2b, 0x0a, 0x09, 0x56, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x56, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x98, 0x03, 0x0a,
	0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a,
	0x0a, 0x65, 0x6d, 0x62, 0x6f, 0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65,
	0x6d, 0x62, 0x6f, 0x73, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x62, 0x6f, 0x73,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x62,
	0x6f, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x22, 0x66, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0c, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x32,
	0xdd, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f,
	0x72, 0x45, 0x6d, 0x62, 0x6f, 0x73, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x62,
	0x6f, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x22, 0x00, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_instantCardStockMenu_proto_rawDescOnce sync.Once
	file_instantCardStockMenu_proto_rawDescData = file_instantCardStockMenu_proto_rawDesc
)

func file_instantCardStockMenu_proto_rawDescGZIP() []byte {
	file_instantCardStockMenu_proto_rawDescOnce.Do(func() {
		file_instantCardStockMenu_proto_rawDescData = protoimpl.X.CompressGZIP(file_instantCardStockMenu_proto_rawDescData)
	})
	return file_instantCardStockMenu_proto_rawDescData
}

var file_instantCardStockMenu_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_instantCardStockMenu_proto_goTypes = []interface{}{
	(*VCardType)(nil),             // 0: pb.VCardType
	(*VCardTypeList)(nil),         // 1: pb.VCardTypeList
	(*EmbossRequest)(nil),         // 2: pb.EmbossRequest
	(*InstantCardStockSum)(nil),   // 3: pb.InstantCardStockSum
	(*InstantStock)(nil),          // 4: pb.InstantStock
	(*InstantStockList)(nil),      // 5: pb.InstantStockList
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*Page)(nil),                  // 7: pb.Page
	(*emptypb.Empty)(nil),         // 8: google.protobuf.Empty
}
var file_instantCardStockMenu_proto_depIdxs = []int32{
	0,  // 0: pb.VCardTypeList.VCardType:type_name -> pb.VCardType
	6,  // 1: pb.EmbossRequest.startDate:type_name -> google.protobuf.Timestamp
	6,  // 2: pb.EmbossRequest.endDate:type_name -> google.protobuf.Timestamp
	7,  // 3: pb.EmbossRequest.page:type_name -> pb.Page
	0,  // 4: pb.InstantCardStockSum.VCardType:type_name -> pb.VCardType
	6,  // 5: pb.InstantStock.embossDate:type_name -> google.protobuf.Timestamp
	6,  // 6: pb.InstantStock.generateDate:type_name -> google.protobuf.Timestamp
	4,  // 7: pb.InstantStockList.InstantStock:type_name -> pb.InstantStock
	8,  // 8: pb.CardTypeList.GetInstantCardType:input_type -> google.protobuf.Empty
	2,  // 9: pb.CardTypeList.GetDataForEmboss:input_type -> pb.EmbossRequest
	8,  // 10: pb.CardTypeList.GetInstantCardStockSum:input_type -> google.protobuf.Empty
	1,  // 11: pb.CardTypeList.GetInstantCardType:output_type -> pb.VCardTypeList
	5,  // 12: pb.CardTypeList.GetDataForEmboss:output_type -> pb.InstantStockList
	3,  // 13: pb.CardTypeList.GetInstantCardStockSum:output_type -> pb.InstantCardStockSum
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_instantCardStockMenu_proto_init() }
func file_instantCardStockMenu_proto_init() {
	if File_instantCardStockMenu_proto != nil {
		return
	}
	file_cardListMenu_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_instantCardStockMenu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCardType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instantCardStockMenu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCardTypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instantCardStockMenu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbossRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instantCardStockMenu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantCardStockSum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instantCardStockMenu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instantCardStockMenu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantStockList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_instantCardStockMenu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_instantCardStockMenu_proto_goTypes,
		DependencyIndexes: file_instantCardStockMenu_proto_depIdxs,
		MessageInfos:      file_instantCardStockMenu_proto_msgTypes,
	}.Build()
	File_instantCardStockMenu_proto = out.File
	file_instantCardStockMenu_proto_rawDesc = nil
	file_instantCardStockMenu_proto_goTypes = nil
	file_instantCardStockMenu_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CardTypeListClient is the client API for CardTypeList service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardTypeListClient interface {
	GetInstantCardType(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*VCardTypeList, error)
	GetDataForEmboss(ctx context.Context, in *EmbossRequest, opts ...grpc.CallOption) (*InstantStockList, error)
	GetInstantCardStockSum(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*InstantCardStockSum, error)
}

type cardTypeListClient struct {
	cc grpc.ClientConnInterface
}

func NewCardTypeListClient(cc grpc.ClientConnInterface) CardTypeListClient {
	return &cardTypeListClient{cc}
}

func (c *cardTypeListClient) GetInstantCardType(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*VCardTypeList, error) {
	out := new(VCardTypeList)
	err := c.cc.Invoke(ctx, "/pb.CardTypeList/GetInstantCardType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardTypeListClient) GetDataForEmboss(ctx context.Context, in *EmbossRequest, opts ...grpc.CallOption) (*InstantStockList, error) {
	out := new(InstantStockList)
	err := c.cc.Invoke(ctx, "/pb.CardTypeList/GetDataForEmboss", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardTypeListClient) GetInstantCardStockSum(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*InstantCardStockSum, error) {
	out := new(InstantCardStockSum)
	err := c.cc.Invoke(ctx, "/pb.CardTypeList/GetInstantCardStockSum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardTypeListServer is the server API for CardTypeList service.
type CardTypeListServer interface {
	GetInstantCardType(context.Context, *emptypb.Empty) (*VCardTypeList, error)
	GetDataForEmboss(context.Context, *EmbossRequest) (*InstantStockList, error)
	GetInstantCardStockSum(context.Context, *emptypb.Empty) (*InstantCardStockSum, error)
}

// UnimplementedCardTypeListServer can be embedded to have forward compatible implementations.
type UnimplementedCardTypeListServer struct {
}

func (*UnimplementedCardTypeListServer) GetInstantCardType(context.Context, *emptypb.Empty) (*VCardTypeList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstantCardType not implemented")
}
func (*UnimplementedCardTypeListServer) GetDataForEmboss(context.Context, *EmbossRequest) (*InstantStockList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataForEmboss not implemented")
}
func (*UnimplementedCardTypeListServer) GetInstantCardStockSum(context.Context, *emptypb.Empty) (*InstantCardStockSum, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstantCardStockSum not implemented")
}

func RegisterCardTypeListServer(s *grpc.Server, srv CardTypeListServer) {
	s.RegisterService(&_CardTypeList_serviceDesc, srv)
}

func _CardTypeList_GetInstantCardType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardTypeListServer).GetInstantCardType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CardTypeList/GetInstantCardType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardTypeListServer).GetInstantCardType(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardTypeList_GetDataForEmboss_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmbossRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardTypeListServer).GetDataForEmboss(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CardTypeList/GetDataForEmboss",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardTypeListServer).GetDataForEmboss(ctx, req.(*EmbossRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardTypeList_GetInstantCardStockSum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardTypeListServer).GetInstantCardStockSum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CardTypeList/GetInstantCardStockSum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardTypeListServer).GetInstantCardStockSum(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _CardTypeList_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CardTypeList",
	HandlerType: (*CardTypeListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInstantCardType",
			Handler:    _CardTypeList_GetInstantCardType_Handler,
		},
		{
			MethodName: "GetDataForEmboss",
			Handler:    _CardTypeList_GetDataForEmboss_Handler,
		},
		{
			MethodName: "GetInstantCardStockSum",
			Handler:    _CardTypeList_GetInstantCardStockSum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "instantCardStockMenu.proto",
}
